<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Spiel: JSONEncodable Interface Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="spiel.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Spiel
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('interface_spiel_1_1_j_s_o_n_encodable.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">JSONEncodable Interface Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Inherited by <a class="el" href="class_spiel_1_1_service_response.htm">ServiceResponse</a>, and <a class="el" href="class_spiel_1_1_service_user.htm">ServiceUser</a>.</p>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is a tagging interface which identifies classes whose instances can be encoded using the <code>json_encode()</code> function of PHP. Implementing classes must declare the attributes to be included in the encoded value as public. In addition, you can define two public static properties of the implementing class which provide additional metadata to Spiel when interface documentation is produced for a service returning an instance of the class:</p>
<div class="fragment"><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> $objectProperties = array();</div>
<div class="line"><span class="keyword">public</span> <span class="keyword">static</span> $enumProperties = array();</div>
</div><!-- fragment --><p>The <code>$objectProperties</code> array provides information on any public attributes of the class which are themselves composed of <code><a class="el" href="interface_spiel_1_1_j_s_o_n_encodable.htm">JSONEncodable</a></code> objects. The <code>$enumProperties</code> array provides information on any public attributes which are actually instances of an <code><a class="el" href="class_spiel_1_1_enum.htm">Enum</a></code> object. In both cases, the array element is a key/value pair with the name of the attribute as the key and the name of its type as its value. If the described attribute actually provides an array, then the value of the key/value pair would be an array containing a string identifying the name of each element's type. Consider the following example:</p>
<div class="fragment"><div class="line"><span class="keyword">class </span>Employee <span class="keyword">implements</span> <a class="code" href="interface_spiel_1_1_j_s_o_n_encodable.htm">\Spiel\JSONEncodable</a></div>
<div class="line">{</div>
<div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> $objectProperties =    array(<span class="stringliteral">&quot;education&quot;</span>    =&gt; <span class="stringliteral">&quot;EducationInfo&quot;</span>,</div>
<div class="line">                                               <span class="stringliteral">&quot;skills&quot;</span>       =&gt; array(<span class="stringliteral">&quot;Skill&quot;</span>));</div>
<div class="line"></div>
<div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> $enumProperties =      array(<span class="stringliteral">&quot;roles&quot;</span>        =&gt; array(<span class="stringliteral">&quot;EmployeeRole&quot;</span>),</div>
<div class="line">                                               <span class="stringliteral">&quot;status&quot;</span>       =&gt; <span class="stringliteral">&quot;EmploymentStatus&quot;</span>);</div>
<div class="line"></div>
<div class="line">    <span class="keyword">public</span> $firstName;   <span class="comment">// Scalar value</span></div>
<div class="line">    <span class="keyword">public</span> $lastName;    <span class="comment">// Scalar value</span></div>
<div class="line">    <span class="keyword">public</span> $employeeId;  <span class="comment">// Scalar value</span></div>
<div class="line">    <span class="keyword">public</span> $education;   <span class="comment">// An EducationInfo object</span></div>
<div class="line">    <span class="keyword">public</span> $skills;      <span class="comment">// An array of Skill objects</span></div>
<div class="line">    <span class="keyword">public</span> $roles;       <span class="comment">// An array of EmployeeRole enumeration values</span></div>
<div class="line">    <span class="keyword">public</span> $status;      <span class="comment">// An EmploymentStatus enumeration value</span></div>
<div class="line"></div>
<div class="line">    ...</div>
<div class="line">}</div>
</div><!-- fragment --><p>Note that one thing to keep in mind is that the actual <code><a class="el" href="interface_spiel_1_1_j_s_o_n_encodable.htm">JSONEncodable</a></code> object returned in a particular service invocation may be an instance of a derived class of that identified in the <code>$objectProperties</code> attribute. In such a case, more data than is indicated by the class identified can be returned if the object's derived class has more public attributes which can be encoded. This will not necessarily cause an issue but it can result in more data than you expected being returned for certain invocations of the service in question. One possible approach to dealing with this is to implement a "slicing copy" method in the base class which returns a copy of the object but as a new instance of the base class. The following service example illustrates this approach.</p>
<div class="fragment"><div class="line">&lt;?php</div>
<div class="line">    require_once(<span class="stringliteral">&quot;spiel.php&quot;</span>);</div>
<div class="line">    require_once(<span class="stringliteral">&quot;ServiceUserManagerImpl.php&quot;</span>);</div>
<div class="line"></div>
<div class="line">    <span class="keyword">class </span>Base <span class="keyword">implements</span> <a class="code" href="interface_spiel_1_1_j_s_o_n_encodable.htm">\Spiel\JSONEncodable</a></div>
<div class="line">    {</div>
<div class="line">        <span class="keyword">public</span> $prop1;</div>
<div class="line">        <span class="keyword">public</span> $prop2;</div>
<div class="line"></div>
<div class="line">        <span class="keyword">public</span> <span class="keyword">function</span> __construct($prop1, $prop2)</div>
<div class="line">        {</div>
<div class="line">            $this-&gt;prop1 = $prop1;</div>
<div class="line">            $this-&gt;prop2 = $prop2;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">function</span> slicingCopy(Base $source = NULL)</div>
<div class="line">        {</div>
<div class="line">            $retVal = NULL;</div>
<div class="line"></div>
<div class="line">            <span class="keywordflow">if</span> ($source !== NULL)</div>
<div class="line">            {</div>
<div class="line">                <span class="comment">// Ignore $source-&gt;prop3 as it&#39;s not in Base</span></div>
<div class="line">                $retVal = <span class="keyword">new</span> Base($source-&gt;prop1, $source-&gt;prop2);</div>
<div class="line">            }</div>
<div class="line"></div>
<div class="line">            <span class="keywordflow">return</span> $retVal;</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keyword">class </span>Sub <span class="keyword">extends</span> Base</div>
<div class="line">    {</div>
<div class="line">        <span class="keyword">public</span> $prop3;</div>
<div class="line"></div>
<div class="line">        <span class="keyword">public</span> <span class="keyword">function</span> __construct($prop1, $prop2, $prop3)</div>
<div class="line">        {</div>
<div class="line">            parent::__construct($prop1, $prop2);</div>
<div class="line"></div>
<div class="line">            $this-&gt;prop3 = $prop3;</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keyword">class </span>ServiceImpl <span class="keyword">extends</span> <a class="code" href="class_spiel_1_1_service.htm">\Spiel\Service</a></div>
<div class="line">    {</div>
<div class="line">        <span class="keyword">public</span> <span class="keyword">function</span> __construct()</div>
<div class="line">        {</div>
<div class="line">            parent::__construct(<span class="keyword">new</span> ServiceUserManagerImpl(),</div>
<div class="line">                                __FILE__,</div>
<div class="line">                                <span class="stringliteral">&quot;Example service which shows the use of a \&quot;slicing copy\&quot;</span></div>
<div class="line"><span class="stringliteral">                                 to enforce the data that is returned.&quot;</span>);</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keyword">public</span> <span class="keyword">function</span> execute(\Spiel\ServiceUser $currentUser, $params)</div>
<div class="line">        {</div>
<div class="line">            $dataReturned = $this-&gt;getBaseInstance();</div>
<div class="line">            $dataReturned = Base::slicingCopy($dataReturned);</div>
<div class="line"></div>
<div class="line">            <span class="keywordflow">return</span> new \Spiel\SuccessServiceResponse($dataReturned);</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keyword">protected</span> <span class="keyword">function</span> getDataReturned()</div>
<div class="line">        {</div>
<div class="line">            <span class="keywordflow">return</span> <span class="stringliteral">&quot;Base&quot;</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keyword">private</span> <span class="keyword">function</span> getBaseInstance()</div>
<div class="line">        {</div>
<div class="line">            <span class="comment">// Imagine this method doing more first, but the point is that it is</span></div>
<div class="line">            <span class="comment">// returning an instance of a Sub object</span></div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">new</span> Sub(<span class="stringliteral">&quot;prop1 value&quot;</span>, <span class="stringliteral">&quot;prop2 value&quot;</span>, <span class="stringliteral">&quot;prop3 value&quot;</span>);</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keyword">new</span> ServiceImpl();</div>
<div class="line">?&gt;</div>
</div><!-- fragment --> </div><hr/>The documentation for this interface was generated from the following file:<ul>
<li>src/JSONEncodable.php</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>Spiel</b></li><li class="navelem"><a class="el" href="interface_spiel_1_1_j_s_o_n_encodable.htm">JSONEncodable</a></li>
    <li class="footer">Generated on Fri Feb 7 2014 06:37:31 for Spiel by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.6 </li>
  </ul>
</div>
</body>
</html>
